syntax = "proto3";


import "github.com/gogo/protobuf/gogoproto/gogo.proto";

// for grpc-gateway

option (gogoproto.gostring_all) = true;
option (gogoproto.marshaler_all) = true;
option (gogoproto.sizer_all) = true;
option (gogoproto.unmarshaler_all) = true;

service KV {
  rpc Get(GetRequest) returns (GetResponse);

  rpc Put(PutRequest) returns (PutResponse);

  rpc Delete(DeleteRequest) returns (DeleteResponse);

}

service Watch {
  rpc Watch(stream WatchRequest) returns (stream WatchResponse);
}

message GetRequest {
  bytes key = 1;
}

message GetResponse {
  KeyValue kv = 1;
}

message PutRequest {
  bytes key = 1;
  bytes value = 2;
}

message PutResponse {
  KeyValue kv = 1;
}

message DeleteRequest {
  bytes key = 1;
}

message DeleteResponse {
  // deleted is the number of keys deleted by the delete range request.
  int64 deleted = 1;
  // if prev_kv is set in the request, the previous key-value pairs will be returned.
  KeyValue kv = 2;
}

message WatchRequest {
  // request_union is a request to either create a new watcher or cancel an existing watcher.
  oneof request_union {
    WatchCreateRequest create_request = 1;
    WatchCancelRequest cancel_request = 2;
  }
}

message WatchCreateRequest {
  // key is the key to register for watching.
  bytes key = 1;
  int64 watch_id = 2;

}

message WatchCancelRequest {
  // watch_id is the watcher id to cancel so that no more events are transmitted.
  int64 watch_id = 1;
}

message WatchResponse {
  int64 watch_id = 1;
  bool created = 2;
  bool canceled = 3;
  string cancel_reason = 4;
  Event event = 5;
}


message KeyValue {
  // key is the key in bytes. An empty key is not allowed.
  bytes key = 1;
  bytes value = 2;
  uint32 numberOfMod = 3;
}

message Event {
  enum EventType {
    PUT = 0;
    DELETE = 1;
  }
  EventType type = 1;
  KeyValue kv = 2;
  KeyValue prev_kv = 3;
}
